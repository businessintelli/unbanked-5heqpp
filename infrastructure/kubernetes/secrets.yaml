# Kubernetes version: 1.25+
# Purpose: Secure storage of sensitive configuration data for Unbanked platform
# Rotation schedule: Based on secret categories defined in annotations
apiVersion: v1
kind: Secret
metadata:
  name: unbanked-secrets
  namespace: unbanked
  labels:
    app: unbanked
    component: backend
    environment: production
    managed-by: kubernetes
    version: 1.0.0
  annotations:
    rotation.kubernetes.io/last-rotated: "2024-01-21T00:00:00Z"
    backup.kubernetes.io/schedule: "daily"
    security.kubernetes.io/encryption: "aes256"
    # Rotation schedules per category
    secrets.unbanked.io/database-rotation: "30d"
    secrets.unbanked.io/auth-rotation: "90d"
    secrets.unbanked.io/api-rotation: "180d"
    secrets.unbanked.io/infra-rotation: "90d"
    # Security controls
    security.unbanked.io/kms-protected: "true"
    security.unbanked.io/audit-logging: "enabled"
    security.unbanked.io/rbac-required: "true"
    security.unbanked.io/pod-security: "restricted"
type: Opaque
data:
  # Database Credentials - 30 day rotation
  DATABASE_URL: ${BASE64_DATABASE_URL}

  # Authentication Keys - 90 day rotation
  JWT_PRIVATE_KEY: ${BASE64_JWT_PRIVATE_KEY}
  JWT_PUBLIC_KEY: ${BASE64_JWT_PUBLIC_KEY}
  MFA_SECRET_KEY: ${BASE64_MFA_SECRET_KEY}

  # Third Party API Keys - 180 day rotation
  PLAID_CLIENT_ID: ${BASE64_PLAID_CLIENT_ID}
  PLAID_SECRET: ${BASE64_PLAID_SECRET}
  COINGECKO_API_KEY: ${BASE64_COINGECKO_API_KEY}

  # Infrastructure Credentials - 90 day rotation
  REDIS_URL: ${BASE64_REDIS_URL}
  SENTRY_DSN: ${BASE64_SENTRY_DSN}
  ENCRYPTION_KEY: ${BASE64_ENCRYPTION_KEY}

---
# RBAC Policy for accessing secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: unbanked
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["unbanked-secrets"]
  verbs: ["get"]

---
# Service Account for backend pods
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-service-account
  namespace: unbanked
  annotations:
    security.unbanked.io/workload-identity: "true"

---
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-binding
  namespace: unbanked
subjects:
- kind: ServiceAccount
  name: backend-service-account
  namespace: unbanked
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io

---
# Pod Security Policy
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: restricted-secrets-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'secret'
    - 'emptyDir'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true